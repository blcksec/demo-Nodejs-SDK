"use strict";

var LOGGER_LEVELS = {
  debug: 0,
  info: 1,
  warn: 2,
  error: 3
};

class Logger {
  constructor() {
    var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "debug";
    if (!(level in LOGGER_LEVELS)) level = "debug";
    this.level = LOGGER_LEVELS[level];
  }

  debug() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    if (this.level <= LOGGER_LEVELS["debug"]) console.debug(args);
  }

  info() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }

    if (this.level <= LOGGER_LEVELS["info"]) console.info(args);
  }

  warn() {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }

    if (this.level <= LOGGER_LEVELS["warn"]) console.warn(args);
  }

  error() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }

    if (this.level <= LOGGER_LEVELS["error"]) console.error(args);
  }

}

var logger = new Logger();
module.exports = logger;